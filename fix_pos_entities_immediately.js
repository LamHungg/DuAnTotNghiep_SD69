const axios = require("axios");

async function fixPosEntitiesImmediately() {
  console.log("üö® S·ª¨A L·ªñI POS ENTITIES NGAY L·∫¨P T·ª®C...");

  const baseURL = "http://localhost:8080/api";

  try {
    // 1. T·∫°o TrangThaiDonHang ID=5
    console.log("üìù 1. T·∫°o TrangThaiDonHang ID=5...");
    try {
      const trangThaiData = {
        tenTrangThai: "Ho√†n th√†nh",
        moTa: "ƒê∆°n h√†ng ƒë√£ ho√†n th√†nh t·∫°i qu·∫ßy POS",
      };
      const response = await axios.post(`${baseURL}/trang-thai`, trangThaiData);
      console.log("‚úÖ TrangThaiDonHang ƒë√£ ƒë∆∞·ª£c t·∫°o v·ªõi ID:", response.data.id);
    } catch (error) {
      console.log(
        "‚ö†Ô∏è TrangThaiDonHang c√≥ th·ªÉ ƒë√£ t·ªìn t·∫°i ho·∫∑c l·ªói:",
        error.response?.data || error.message
      );
    }

    // 2. T·∫°o DiaChi ID=1
    console.log("üìù 2. T·∫°o DiaChi ID=1...");
    try {
      const diaChiData = {
        diaChiChiTiet: "T·∫°i c·ª≠a h√†ng",
        phuongXa: "Ph∆∞·ªùng 1",
        quanHuyen: "Qu·∫≠n 1",
        tinhThanh: "TP. H·ªì Ch√≠ Minh",
        loaiDiaChi: "C·ª≠a h√†ng",
      };
      const response = await axios.post(`${baseURL}/dia-chi`, diaChiData);
      console.log("‚úÖ DiaChi ƒë√£ ƒë∆∞·ª£c t·∫°o v·ªõi ID:", response.data.id);
    } catch (error) {
      console.log(
        "‚ö†Ô∏è DiaChi c√≥ th·ªÉ ƒë√£ t·ªìn t·∫°i ho·∫∑c l·ªói:",
        error.response?.data || error.message
      );
    }

    // 3. T·∫°o PhuongThucThanhToan ID=1
    console.log("üìù 3. T·∫°o PhuongThucThanhToan ID=1...");
    try {
      const paymentData = {
        tenPhuongThuc: "Ti·ªÅn m·∫∑t",
        moTa: "Thanh to√°n b·∫±ng ti·ªÅn m·∫∑t",
        trangThai: 1,
      };
      const response = await axios.post(
        `${baseURL}/phuong-thuc-thanh-toan`,
        paymentData
      );
      console.log(
        "‚úÖ PhuongThucThanhToan ƒë√£ ƒë∆∞·ª£c t·∫°o v·ªõi ID:",
        response.data.id
      );
    } catch (error) {
      console.log(
        "‚ö†Ô∏è PhuongThucThanhToan c√≥ th·ªÉ ƒë√£ t·ªìn t·∫°i ho·∫∑c l·ªói:",
        error.response?.data || error.message
      );
    }

    // 4. Ki·ªÉm tra l·∫°i
    console.log("\nüîç 4. Ki·ªÉm tra l·∫°i c√°c entity...");
    await checkEntities();

    // 5. Test POS order ngay
    console.log("\nüß™ 5. Test t·∫°o ƒë∆°n h√†ng POS...");
    await testPosOrder();
  } catch (error) {
    console.error("‚ùå L·ªói trong qu√° tr√¨nh s·ª≠a:", error.message);
  }
}

async function checkEntities() {
  const baseURL = "http://localhost:8080/api";

  try {
    // Test TrangThaiDonHang
    try {
      const response = await axios.get(`${baseURL}/trang-thai`);
      const hoanThanh = response.data.find(
        (item) => item.tenTrangThai === "Ho√†n th√†nh"
      );
      if (hoanThanh) {
        console.log(
          '‚úÖ TrangThaiDonHang "Ho√†n th√†nh" t·ªìn t·∫°i v·ªõi ID:',
          hoanThanh.id
        );
      } else {
        console.log('‚ùå TrangThaiDonHang "Ho√†n th√†nh" kh√¥ng t·ªìn t·∫°i');
      }
    } catch (error) {
      console.log("‚ùå L·ªói ki·ªÉm tra TrangThaiDonHang:", error.response?.status);
    }

    // Test DiaChi
    try {
      const response = await axios.get(`${baseURL}/dia-chi`);
      const taiCuaHang = response.data.find(
        (item) => item.diaChiChiTiet === "T·∫°i c·ª≠a h√†ng"
      );
      if (taiCuaHang) {
        console.log('‚úÖ DiaChi "T·∫°i c·ª≠a h√†ng" t·ªìn t·∫°i v·ªõi ID:', taiCuaHang.id);
      } else {
        console.log('‚ùå DiaChi "T·∫°i c·ª≠a h√†ng" kh√¥ng t·ªìn t·∫°i');
      }
    } catch (error) {
      console.log("‚ùå L·ªói ki·ªÉm tra DiaChi:", error.response?.status);
    }

    // Test PhuongThucThanhToan
    try {
      const response = await axios.get(`${baseURL}/phuong-thuc-thanh-toan`);
      const tienMat = response.data.find(
        (item) => item.tenPhuongThuc === "Ti·ªÅn m·∫∑t"
      );
      if (tienMat) {
        console.log(
          '‚úÖ PhuongThucThanhToan "Ti·ªÅn m·∫∑t" t·ªìn t·∫°i v·ªõi ID:',
          tienMat.id
        );
      } else {
        console.log('‚ùå PhuongThucThanhToan "Ti·ªÅn m·∫∑t" kh√¥ng t·ªìn t·∫°i');
      }
    } catch (error) {
      console.log(
        "‚ùå L·ªói ki·ªÉm tra PhuongThucThanhToan:",
        error.response?.status
      );
    }
  } catch (error) {
    console.error("‚ùå L·ªói ki·ªÉm tra entities:", error.message);
  }
}

async function testPosOrder() {
  const baseURL = "http://localhost:8080/api";

  try {
    const orderData = {
      maDonHang: `POS${Date.now()}`,
      tongThanhToan: 350000,
      phuongThucThanhToan: "cash",
      ghiChu: "Test ƒë∆°n h√†ng POS sau khi s·ª≠a",
      khachHangId: null,
      voucherId: null,
      chiTietDonHang: [
        {
          chiTietSanPhamId: 1,
          soLuong: 1,
          giaBan: 350000,
        },
      ],
    };

    console.log("üì§ G·ª≠i ƒë∆°n h√†ng POS...");
    const response = await axios.post(`${baseURL}/pos/orders`, orderData);
    console.log("‚úÖ ƒê∆°n h√†ng POS ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!");
    console.log("üìä Response:", response.data);
  } catch (error) {
    console.log(
      "‚ùå L·ªói t·∫°o ƒë∆°n h√†ng POS:",
      error.response?.data || error.message
    );
  }
}

fixPosEntitiesImmediately();
